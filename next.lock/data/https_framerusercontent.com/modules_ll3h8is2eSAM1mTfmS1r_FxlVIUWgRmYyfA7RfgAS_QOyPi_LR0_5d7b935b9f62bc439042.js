import { useRandomID } from "https://framer.com/m/framer/randomID.js@0.1.0"; import Row from "https://framerusercontent.com/modules/eAjaSSP3eixugcd2iJMI/uin8pToLFj6h47QxxJ3l/nEYUMz4Dl.js"; import * as React from "react"; import { motion , cx , useVariantState , useAddVariantProps , withCSS , LayoutGroup , transformTemplate , Stack } from "framer"; const cycleOrder = ["kDRD2WM7H"]; const variantClassNames = {kDRD2WM7H: "framer-v-1r2ammb"}; const humanReadableVariantMap = {}; const transitions = {default: {type: "spring", ease: [0.44, 0, 0.56, 1], duration: 0.3, delay: 0, stiffness: 400, damping: 30, mass: 1}}; const Component = React.forwardRef(function ({ style, className, layoutId, width, height, variant: outerVariant = "kDRD2WM7H", ...restProps }, ref) { const outerVariantId = humanReadableVariantMap[outerVariant]; const variant = outerVariantId || outerVariant; const { variants, baseVariant, gestureVariant, classNames, transition, setVariant, setGestureState } = useVariantState({defaultVariant: "kDRD2WM7H", variant, transitions, variantClassNames, cycleOrder}); const variantProps = React.useMemo(() => { return ({}); }, []); const addVariantProps = useAddVariantProps(baseVariant, gestureVariant, variantProps); const defaultLayoutId = useRandomID(); return (React.createElement(LayoutGroup, {id: layoutId !== null && layoutId !== void 0 ? layoutId : defaultLayoutId}, React.createElement(motion.div, {initial: variant, animate: variants, className: cx("framer-6GFZm", classNames), style: {display: "contents"}, onHoverStart: () => { return setGestureState({isHovered: true}); }, onHoverEnd: () => { return setGestureState({isHovered: false}); }, onTapStart: () => { return setGestureState({isPressed: true}); }, onTap: () => { return setGestureState({isPressed: false}); }, onTapCancel: () => { return setGestureState({isPressed: false}); }}, React.createElement(Stack, Object.assign({}, restProps, {style: {borderBottomLeftRadius: 15, borderBottomRightRadius: 15, borderTopRightRadius: 15, borderTopLeftRadius: 15, boxShadow: "0px 10px 20px 0px rgba(0, 0, 0, 0.1)", backgroundColor: "rgb(255, 255, 255)", rotate: 0, ...style}, layoutId: "kDRD2WM7H", className: cx("framer-1r2ammb", className), direction: "vertical", distribution: "start", alignment: "center", gap: 0, __fromCanvasComponent: true, __contentWrapperStyle: {width: "auto", height: "auto", padding: "0px 0px 0px 0px"}, center: false, "data-framer-name": "Variant 1", transition, ref}, addVariantProps("kDRD2WM7H")), React.createElement(motion.div, Object.assign({style: {rotate: 0}, layoutId: "kD8xLR2tR-container", className: "framer-1alby4g-container", transformTemplate: transformTemplate(false), transition}, addVariantProps("kD8xLR2tR-container")), React.createElement(Row, Object.assign({width: "100%", height: "100%", layoutId: "kD8xLR2tR", id: "kD8xLR2tR", variant: "fRkcQSg3k", title: "Variants", content: "Draw, move and edit layers within any component variant.", emoji: "ðŸ’Ž", style: {width: "100%"}, transition}, addVariantProps("kD8xLR2tR")))), React.createElement(motion.div, Object.assign({style: {backgroundColor: "rgb(238, 238, 238)", rotate: 0}, layoutId: "Ib7o89uKF", className: "framer-11yjqzq", transition}, addVariantProps("Ib7o89uKF"))), React.createElement(motion.div, Object.assign({style: {rotate: 0}, layoutId: "UUeYiLW2W-container", className: "framer-1kx77u4-container", transformTemplate: transformTemplate(false), transition}, addVariantProps("UUeYiLW2W-container")), React.createElement(Row, Object.assign({width: "100%", height: "100%", layoutId: "UUeYiLW2W", id: "UUeYiLW2W", variant: "fRkcQSg3k", title: "Auto Size", content: "Create designs and interactions that adjust to changes in content.", emoji: "ðŸ¤©", style: {width: "100%"}, transition}, addVariantProps("UUeYiLW2W")))))))); }); const css = [".framer-6GFZm [data-border=\"true\"]::after { content: \"\"; border-width: var(--border-top-width, 0) var(--border-right-width, 0) var(--border-bottom-width, 0) var(--border-left-width, 0); border-color: var(--border-color, none); border-style: var(--border-style, none); width: 100%; height: 100%; position: absolute; box-sizing: border-box; left: 0; top: 0; border-radius: inherit; pointer-events: none;}", ".framer-6GFZm .framer-1r2ammb {position: relative; overflow: hidden; width: min-content; height: min-content;}", ".framer-6GFZm .framer-1alby4g-container {position: relative; width: 300px; height: auto; flex: none;}", ".framer-6GFZm .framer-11yjqzq {position: relative; overflow: hidden; width: auto; height: 1px; flex: none; align-self: stretch;}", ".framer-6GFZm .framer-1kx77u4-container {position: relative; width: 300px; height: auto; flex: none;}"]; const FramerQOyPi_LR0 = withCSS(Component, css); export default FramerQOyPi_LR0; FramerQOyPi_LR0.displayName = "Accordion"; FramerQOyPi_LR0.defaultProps = {width: 300, height: 161}; export const __FramerMetadata__ = {exports: {default: {type: "reactComponent", slots: [], annotations: {framerSupportedLayoutHeight: "any", framerSupportedLayoutWidth: "any", framerCanvasComponentVariantDetails: "{\"propertyName\": \"variant\", \"data\": {\"default\": {\"layout\": [\"auto\", \"auto\"]}}}", framerIntrinsicHeight: "161", framerIntrinsicWidth: "300"}}}}; 