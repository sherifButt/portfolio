import { NullState } from "https://framer.com/m/framer/icon-nullstate.js@0.6.0"; import Airplane from "https://framer.com/m/phosphor-icons/Airplane.js@0.0.25"; import { defaultEvents , useIconSelection } from "https://framerusercontent.com/modules/Ma20hU0GGRxLxZphbywl/qQHYGUKEWWmigEUYL80B/utils.js"; import { iconKeys } from "https://framerusercontent.com/modules/HjE5G3pY4j35zPmCddii/XWf0vJlsNR5d2NNLMX1S/phosphorKeys.js"; import * as React from "react"; import { useState , useEffect , useRef } from "react"; import { addPropertyControls , ControlType , motion } from "framer"; const moduleBaseUrl = "https://framer.com/m/phosphor-icons/"; const weightOptions = ["thin", "light", "regular", "bold", "fill", "duotone"]; const lowercaseIconKeyPairs = iconKeys.reduce((res, key) => { res[key.toLowerCase()] = key; return res; }, {}); export function Icon (props) { const { color, selectByList, iconSearch, iconSelection, onClick, onMouseDown, onMouseUp, onMouseEnter, onMouseLeave, weight, mirrored } = props; const isMounted = useRef(false); const iconKey = useIconSelection(iconKeys, selectByList, iconSearch, iconSelection, lowercaseIconKeyPairs); const [SelectedIcon,setSelectedIcon] = useState(iconKey === "Home" ? Airplane : null); async function importModule () { try { const iconModuleUrl = `${moduleBaseUrl}${iconKey}.js@0.0.25`; const module = await import(iconModuleUrl); if (isMounted.current) { setSelectedIcon(module.default) }; } catch { if (isMounted.current) { setSelectedIcon(null) }; }; }; useEffect(() => { isMounted.current = true; importModule(); return () => { isMounted.current = false; }; }, [iconKey]); return React.createElement(motion.div, Object.assign({style: {display: "contents"}}, {onClick, onMouseEnter, onMouseLeave, onMouseDown, onMouseUp}), SelectedIcon ? React.createElement(SelectedIcon, {style: {width: "100%", height: "100%"}, weight, color, mirrored}) : React.createElement(NullState, null)); }; Icon.displayName = "Phosphor"; Icon.defaultProps = {width: 24, height: 24, iconSelection: "House", iconSearch: "House", color: "#66F", selectByList: true, weight: "regular", mirrored: false}; addPropertyControls(Icon, {selectByList: {type: ControlType.Boolean, title: "Select", enabledTitle: "List", disabledTitle: "Search", defaultValue: Icon.defaultProps.selectByList}, iconSelection: {type: ControlType.Enum, options: iconKeys, defaultValue: Icon.defaultProps.iconSelection, title: "Name", hidden: ({ selectByList }) => { return !selectByList; }}, iconSearch: {type: ControlType.String, title: "Name", placeholder: "Menu, Wifi, Boxâ€¦", hidden: ({ selectByList }) => { return selectByList; }}, color: {type: ControlType.Color, title: "Color", defaultValue: Icon.defaultProps.color}, weight: {type: ControlType.Enum, title: "Weight", optionTitles: weightOptions.map((piece) => { return piece.charAt(0).toUpperCase() + piece.slice(1); }), options: weightOptions, defaultValue: Icon.defaultProps.weight}, mirrored: {type: ControlType.Boolean, enabledTitle: "Yes", disabledTitle: "No", defaultValue: Icon.defaultProps.mirrored}, ...defaultEvents}); export const __FramerMetadata__ = {exports: {IconProps: {type: "tsType"}, Icon: {type: "reactComponent", slots: [], annotations: {framerIntrinsicHeight: "24", framerIntrinsicWidth: "24"}}}}; 